#include "Vntt_multiplication.h"  // Verilated header for the ntt_multiplication module
#include "verilated.h"
#include "verilated_vcd_c.h"       // Header for VCD tracing
#include <iostream>
#include <vector>
#include <cstdint>

int main(int argc, char** argv) {
    Verilated::commandArgs(argc, argv);

    // Create an instance of the Verilated module
    Vntt_multiplication* ntts = new Vntt_multiplication;

    // Enable tracing
    Verilated::traceEverOn(true);  // Turn on tracing
    VerilatedVcdC* tfp = new VerilatedVcdC;
    ntts->trace(tfp, 99);           // Trace all signals with full depth
    tfp->open("ntt_multiplication.vcd");  // Open the VCD file

    // Modulus q
    uint16_t q = 3329;

    // Example input polynomials f and g with 256 values each
    uint16_t f[256] = {
        245, 1023, 3100, 201, 2764, 678, 1455, 2730, 3072, 160, 1340, 2220, 2789, 189, 2556, 1583,
    2598, 173, 1403, 2984, 1600, 1814, 2887, 2054, 920, 2965, 1594, 1472, 3302, 482, 935, 3079,
    1165, 2711, 1153, 2881, 764, 191, 1763, 3102, 2165, 1459, 802, 2279, 1401, 1500, 293, 2821,
    1925, 1706, 2890, 1832, 1603, 987, 1827, 3218, 249, 2876, 1107, 2446, 3013, 140, 1225, 2740,
    1217, 2098, 1259, 1228, 2501, 1581, 1438, 3086, 1746, 2941, 3134, 2543, 2495, 3190, 1417, 2583,
    1829, 2760, 2709, 2273, 2571, 101, 2479, 2784, 3178, 1372, 181, 1109, 2275, 150, 1873, 2542,
    1047, 2230, 1664, 2458, 2888, 1087, 3113, 1297, 1565, 2513, 2686, 1847, 1645, 2779, 2552, 3131,
    752, 1824, 3033, 2184, 2956, 2673, 2385, 3193, 1944, 1638, 2830, 2395, 1559, 2920, 1380, 2263,
    1611, 2910, 3161, 1681, 2107, 1299, 1498, 1702, 2567, 2398, 1842, 2974, 1774, 1118, 2084, 1199,
    1098, 2377, 2237, 1875, 2151, 1042, 2735, 1592, 1275, 1926, 2208, 2381, 3114, 2143, 2540, 1182,
    2492, 1896, 1984, 2050, 1529, 2426, 1385, 3048, 1743, 2641, 1074, 1150, 1661, 2754, 2217, 3018,
    2408, 3320, 1488, 3014, 2925, 2467, 2018, 2875, 3279, 2339, 2963, 2785, 2951, 1690, 2460, 2011,
    2413, 3246, 3207, 1073, 1678, 2175, 3235, 1343, 2732, 1682, 2176, 1860, 3000, 1405, 2261, 1138,
    1846, 1569, 3115, 2517, 1912, 2794, 2834, 2494, 1065, 2878, 2623, 3286, 2442, 2922, 1969, 3225,
    1261, 1049, 2006, 1737, 1764, 2913, 2717, 1481, 2815, 1330, 2212, 1768, 2635, 2898, 3247, 3200,
    1303, 1208, 2019, 1667, 1095, 2869, 3274, 1810, 2763, 3067, 2271, 1772, 1155, 2109, 2370, 1780
    };

    uint16_t g[256] = {
        1864, 1825, 1512, 1255, 2094, 2921, 142, 2191, 994, 2510, 104, 1819, 2311, 1151, 144, 1430,
    2322, 843, 1872, 2734, 1621, 823, 243, 2382, 2998, 2268, 1582, 2475, 2238, 2837, 3119, 2677,
    1699, 2345, 1157, 2314, 1376, 1243, 2194, 1184, 2756, 2812, 1156, 3092, 1462, 289, 121, 2560,
    2489, 1992, 2153, 2119, 2067, 1575, 1753, 1724, 145, 3328, 2053, 2702, 1304, 1812, 2434, 1560,
    3008, 2179, 1200, 2293, 1374, 3215, 1424, 2380, 2857, 2978, 2544, 3255, 3272, 3228, 280, 1484,
    3037, 1240, 2483, 2117, 3214, 2012, 993, 2374, 2548, 1192, 2087, 2557, 1970, 2298, 3231, 2566,
    2418, 3004, 2851, 1541, 1902, 1473, 3128, 2214, 3248, 1833, 2715, 2297, 2091, 2781, 1064, 2134,
    1708, 1876, 1721, 1178, 1923, 3262, 2934, 3199, 1234, 1963, 1892, 1469, 1416, 1714, 2013, 1904,
    1730, 2171, 2338, 1328, 1637, 2223, 1452, 1517, 1804, 2116, 1930, 1627, 1976, 2225, 1213, 2294,
    2124, 3001, 1366, 1644, 2487, 2997, 3093, 1878, 3187, 1307, 2659, 2266, 1820, 2511, 1890, 1249,
    2905, 1784, 2100, 1289, 1419, 1392, 2759, 3201, 2621, 2838, 1314, 2584, 1795, 1410, 2309, 3034,
    2718, 2420, 2961, 2631, 2027, 2696, 1642, 2822, 3057, 2681, 2251, 2539, 2783, 3010, 1323, 3111,
    1533, 2112, 1450, 2274, 2981, 2957, 2260, 1674, 1719, 1356, 2158, 1683, 1239, 2336, 1720, 3085,
    2931, 1412, 1785, 1769, 3077, 3202, 3126, 3260, 2809, 1906, 3264, 1983, 1789, 1620, 2648, 1718,
    1577, 2918, 1474, 2186, 1418, 1127, 2189, 1198, 1491, 1365, 2849, 1841, 1483, 3069, 2525, 2456,
    2936, 2017, 3015, 3174, 2482, 1518, 2559, 1741, 2024, 2422, 3062, 1168, 2874, 1388, 1383, 2747
    };

    // Set the input values in the Verilator model
    for (int i = 0; i < 256; i++) {
        ntts->f[i] = f[i];
        ntts->g[i] = g[i];
    }

    ntts->q = q;

    // Evaluate the model
    ntts->eval();
    tfp->dump(0);  // Dump the initial state at time 0

    // Advance time to capture signal changes (simulate each clock cycle if necessary)
    for (int i = 1; i <= 10; i++) {
        ntts->eval();
        tfp->dump(i);  // Dump each evaluation state to the VCD file
    }

    // Output the results
    std::cout << "Resulting polynomial h:" << std::endl;
    for (int i = 0; i < 256; i++) {
        std::cout << "h[" << i << "] = " << ntts->h[i] << std::endl;
    }

    // Clean up
    tfp->close();   // Close the VCD file
    delete tfp;
    delete ntts;

    return 0;
}