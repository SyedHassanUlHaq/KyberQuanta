#include <iostream>
#include <verilated.h>
#include <verilated_vcd_c.h>
#include "Vinverse_ntt.h"

vluint64_t sim_time = 0;
int main(int argc, char **argv) {
    Verilated::commandArgs(argc, argv);
    Vinverse_ntt *dut = new Vinverse_ntt;
    Verilated::traceEverOn(true);
    VerilatedVcdC *m_trace = new VerilatedVcdC;
    dut->trace(m_trace, 99);
    m_trace->open("inverse_ntt.vcd");
    dut->eval();
    m_trace->dump(sim_time++);
    int static_values[256] = {
        2877, 239, 752, 1623, 488, 886, 2299, 1991, 835, 1621, 838, 2650, 516, 197, 1678, 1784,
        2172, 2139, 1545, 1098, 1669, 2226, 996, 1610, 2720, 1037, 2551, 800, 3, 1574, 639, 748,
        385, 244, 497, 2501, 57, 824, 119, 2243, 3229, 1372, 2449, 1436, 2723, 3276, 1940, 1994,
        3227, 312, 2537, 3251, 3191, 483, 1597, 1224, 2598, 3214, 1192, 355, 2369, 1945, 1279,
        341, 1713, 1723, 1259, 1492, 516, 1567, 721, 57, 2821, 1635, 2659, 2364, 690, 1751, 2494,
        1354, 2600, 3166, 2532, 17, 2931, 388, 1309, 2495, 2669, 1523, 3107, 3066, 204, 717, 1701,
        1314, 1705, 1926, 2233, 2436, 1099, 55, 2610, 1872, 1096, 878, 2095, 2770, 3047, 1026,
        1405, 1180, 771, 750, 2920, 2074, 376, 3260, 1610, 2763, 1325, 1573, 1167, 647, 1582, 995,
        329, 3063, 2655, 2924, 1861, 2662, 1386, 1751, 2490, 1269, 1152, 2783, 568, 1237, 1562,
        2915, 518, 1653, 3157, 3101, 2546, 3304, 165, 841, 1273, 1169, 2742, 1880, 2986, 2945,
        3228, 1056, 169, 1594, 2436, 1455, 327, 3093, 643, 1077, 1576, 1528, 1769, 860, 808, 1004,
        1700, 2030, 183, 1557, 1784, 1412, 2176, 2815, 210, 2088, 2586, 1959, 2374, 878, 2950, 183,
        2267, 1757, 2250, 629, 2849, 1405, 3117, 944, 1722, 1446, 1645, 209, 2320, 1758, 454, 415,
        205, 1075, 1666, 979, 3012, 319, 3057, 3055, 274, 1975, 1096, 1949, 1046, 1879, 1766, 1165,
        437, 495, 1691, 2753, 2645, 1850, 2816, 2997, 1585, 2288, 1027, 897, 1625, 2803, 2927, 249,
        1172, 1171, 2236, 2938, 2035, 1512, 2185, 1314, 474, 301, 3250, 1407, 2433, 99, 2887, 349,
        1977, 2785, 195, 1872
    };
    for (int i = 0; i < 256; i++) {
        dut->f[i] = static_values[i];
    }
    for (int cycle = 0; cycle < 10; cycle++) {
        dut->eval();
        m_trace->dump(sim_time++);
        if (cycle == 9) {  
            std::cout << "Time: " << sim_time << " | ";
            std::cout << "f_hat: {";
            for (int i = 0; i < 256; i++) {
                std::cout << (int32_t)dut->f_hat[i];
                if (i < 255) std::cout << ", ";
            }
            std::cout << "}" << std::endl;
        }

        dut->eval();
        m_trace->dump(sim_time++);
    }
    dut->final();
    m_trace->close();
    delete dut;
    return 0;
}
